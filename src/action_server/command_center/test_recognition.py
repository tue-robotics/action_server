#! /usr/bin/python

import os
import cfgparser
import sys
import rospy

from robocup_knowledge import load_knowledge
from command_recognizer import CommandRecognizer

from generate_command import CommandGenerator

challenge_knowledge = load_knowledge('challenge_gpsr')

# ----------------------------------------------------------------------------------------------------

def usage():
    print """Usage:

    test_recognition <ROBOT_NAME>

        (uses speech-to-text, and parses sentence)

or

    test_recognition <ROBOT_NAME> put your command here

        (parses given command)

or

    test_recognition --from-generator

        (continuously parses sentences generated by command generator)
"""

# ----------------------------------------------------------------------------------------------------

def generator_mode(command_recognizer):
    cmd_gen = CommandGenerator()

    try:
        while True:
            command = cmd_gen.generate_command()
            command = command.replace(",", "")
            if not command_recognizer.parse(command):
                print "Could not parse '{}'".format(command)
    except KeyboardInterrupt:
        pass

# ----------------------------------------------------------------------------------------------------

def print_result(res):
    if res:
        (sentence, semantics) = res
        print "Sentence: %s" % sentence
        print "Semantics: %s" % semantics
    else:
        print "Could not understand"  

# ----------------------------------------------------------------------------------------------------

def text_mode(command_recognizer, sentence, robot_name):
    rospy.init_node("gpsr_test_recognition")

    if robot_name == 'amigo':
        from robot_skills.amigo import Amigo as Robot
    elif robot_name == 'sergio':
        from robot_skills.sergio import Sergio as Robot
    else:
        print "unknown robot"
        return 1

    robot = Robot()

    print "---------------------------------------------------------------"
    print_result(command_recognizer.parse(sentence, robot))
    print "---------------------------------------------------------------"

# ----------------------------------------------------------------------------------------------------

def speech_mode(command_recognizer, robot_name):
    rospy.init_node("gpsr_test_recognition")

    if robot_name == 'amigo':
        from robot_skills.amigo import Amigo as Robot
    elif robot_name == 'sergio':
        from robot_skills.sergio import Sergio as Robot
    else:
        print "unknown robot"
        return 1

    robot = Robot()

    import time
    time.sleep(1)
    robot.head.look_at_standing_person()

    while not rospy.is_shutdown():
        robot.speech.speak("What can I do for you?")
        print "---------------------------------------------------------------"

        res = command_recognizer.recognize(robot)
        print_result(res)

        if res:
            (sentence, semantics) = res
            robot.speech.speak("You want me to %s" % sentence, block=True)

# ----------------------------------------------------------------------------------------------------

def main():

    if len(sys.argv) < 2:
        usage()
        return

    command_recognizer = CommandRecognizer(os.path.dirname(sys.argv[0]) + "/grammar.fcfg", challenge_knowledge)

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    if sys.argv[1] == "--from-generator":
        generator_mode(command_recognizer)
        return

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    sentence = " ".join([word for word in sys.argv[2:] if word[0] != '_'])

    robot_name = sys.argv[1]

    if sentence:
        text_mode(command_recognizer, sentence, robot_name)
        return
    else:        
        speech_mode(command_recognizer, robot_name)       

# ----------------------------------------------------------------------------------------------------

if __name__ == "__main__":
    sys.exit(main())
